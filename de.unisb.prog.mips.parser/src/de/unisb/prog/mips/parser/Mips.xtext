grammar de.unisb.prog.mips.parser.Mips 

generate mips "http://www.unisb.de/prog/mips/parser/Mips"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore 

Asm hidden(COMMENT,WHITE,NL):  (elem+=DataSegment | elem+=TextSegment)*;

Directive: {Global} ".globl" label=[Label]
         | {Extern} ".extern" label=Label
         | {SetAt} ".set" ID
         ;

TextSegment: ".text" (addr=HEXINT)? (items+=TextItem | items+=Directive | items+=LabelDef)+;
TextItem:    item=(Insn | Align | Word);

Insn hidden(COMMENT,WHITE): opcode=ID (regs+=Reg)* (addr=Addr)? ('(' base=Reg ')')? NL;
	
Reg: (INTREG | TXTREG);

Addr:  label=[Label] ("+"|"-") expr=CExpr | label=[Label] | expr=CExpr;
CExpr returns Expression: Mult (({Add.left=current} '+'| {Sub.left=current} '-') right=Mult)*;
Mult  returns Expression: Unary (({Mul.left=current} '*' | {Shra.left=current} ">>" | {Shr.left=current} ">>>" | {Shl.left=current} "<<") right=Unary)*;
Unary returns Expression: ({Minus} '-' | {Unary}) expr=Prim;
Prim  returns Expression: '(' CExpr ')' | {Const} cnst=PNInt;
	
DataSegment:  ".data" (addr=HEXINT)? (items+=DataDecl | items+=Directive | items+=LabelDef)+;

DataDecl : item=(Str | Align | Space | Byte | Half | Word);
	
Label:       ^name=ID;
LabelDef:    label=Label ':';
Align:       ".align" (align=INT) ;
Space:       ".space" (bytes=INT);
Word:        ".word" vals=AddrList;
Half:        ".half" vals=IntList;
Byte:        ".byte" vals=IntList;
Str:         ({Asciiz} ".asciiz" | {Ascii} ".ascii") val=STRING;

IntList:     vals+=PNInt (',' vals+=PNInt)*;
AddrList:    vals+=Addr (',' vals+=Addr)*;
PNInt:       val=(INT | HEXINT);

terminal INT    returns ecore::EInt: ('0'..'9') ('0'..'9')*;
terminal HEXINT returns ecore::EInt: '0' 'x' ('0'..'9'|'a'..'f'|'A'..'F')+;
	
terminal INTREG   : '$' ('0'..'9')+;
terminal TXTREG   : '$' ('a'..'z') ('a'..'z'|'0'..'9')+;
terminal COMMENT  : (';'|'#') !('\n'|'\r')* ;
terminal WHITE    : (' '|'\t')+;
terminal NL       : ('\r'|'\n')+;

terminal ID       : '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal STRING	  : '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|'"') )* '"' 
                  | "'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|"'") )* "'" ; 
	
